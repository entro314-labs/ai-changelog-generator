name: Publish to npm

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty for current package.json version)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run tests
        run: pnpm test
        
      - name: Build (if build script exists)
        run: |
          if pnpm run --if-present build; then
            echo "Build completed"
          else
            echo "No build script found, skipping"
          fi
          
      - name: Update version (if specified)
        if: github.event.inputs.version != ''
        run: |
          pnpm version ${{ github.event.inputs.version }} --no-git-tag-version
          
      - name: Run pre-publish script (if exists)
        run: |
          if [ -f "scripts/pre-publish.sh" ]; then
            chmod +x scripts/pre-publish.sh
            ./scripts/pre-publish.sh
          fi
          
      - name: Publish to npm
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Get published version
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Create GitHub Release (if triggered by workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          name: Release v${{ steps.get-version.outputs.version }}
          body: |
            ## Release v${{ steps.get-version.outputs.version }}
            
            Published to npm: https://www.npmjs.com/package/@entro314labs/ai-changelog-generator/v/${{ steps.get-version.outputs.version }}
            
            ### Installation
            ```bash
            pnpm add @entro314labs/ai-changelog-generator
            # or
            npm install @entro314labs/ai-changelog-generator
            ```
          draft: false
          prerelease: false